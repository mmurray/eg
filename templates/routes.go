package templates

import (
	"bytes"
	"compress/gzip"
	"io"
)

// Routes returns raw, uncompressed file data.
func Routes() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x1c,0xcb,
0xb1,0x0d,0xc2,0x40,0x0c,0x05,0xd0,0xfe,0x4f,0xf1,0x95,0x0a,
0x9a,0x78,0x06,0x56,0x60,0x83,0x70,0x71,0xee,0x22,0x74,0xf1,
0xc9,0xd8,0x05,0x20,0x76,0x07,0x51,0x3f,0xbd,0xb1,0x94,0xfb,
0x52,0x95,0xc5,0x8e,0x0d,0x10,0xe1,0xde,0x87,0x79,0x70,0xaa,
0x7b,0xb4,0xbc,0xcd,0xc5,0xba,0xf4,0xf4,0x97,0x68,0x35,0x69,
0x11,0x63,0x02,0xb6,0x3c,0x0a,0xaf,0x96,0xa1,0x8f,0xd3,0x99,
0x6f,0x90,0xbf,0x77,0x59,0x57,0x3e,0x2d,0x9d,0xfe,0x07,0x36,
0x75,0x9d,0xf1,0x01,0xbe,0x01,0x00,0x00,0xff,0xff,0x54,0x9e,
0xd6,0x46,0x62,0x00,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}