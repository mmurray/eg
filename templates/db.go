package templates

import (
	"bytes"
	"compress/gzip"
	"io"
)

// Databases returns raw, uncompressed file data.
func Databases() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x34,0xcb,
0x31,0x0e,0xc2,0x30,0x0c,0x05,0xd0,0xfd,0x9f,0xe2,0xab,0x13,
0x2c,0xf5,0x19,0x90,0xb8,0x88,0x93,0xb8,0x69,0x85,0x52,0x57,
0x69,0x3c,0x00,0xe2,0xee,0xb0,0x30,0x3f,0xbd,0x43,0xf3,0x43,
0xab,0x31,0xfb,0xbe,0x00,0x22,0xdc,0xda,0xe1,0x7d,0x70,0xaa,
0xdb,0x58,0x23,0xcd,0xd9,0x9b,0xb4,0xe8,0x2f,0xb1,0xea,0x52,
0xd2,0x04,0x2c,0xb1,0x67,0xde,0x75,0x68,0xd2,0xd3,0xce,0xcb,
0x95,0x6f,0x90,0xbf,0x78,0x2b,0x85,0x4f,0x8f,0xce,0xf2,0x37,
0xae,0xd6,0x6d,0xc6,0x07,0xf8,0x06,0x00,0x00,0xff,0xff,0x5c,
0x9e,0x7f,0x51,0x66,0x00,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}