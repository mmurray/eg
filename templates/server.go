package templates

import (
	"bytes"
	"compress/gzip"
	"io"
)

// Server returns raw, uncompressed file data.
func Server() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x6c,0x91,
0xc1,0x4b,0xc3,0x30,0x18,0xc5,0xcf,0xcb,0x5f,0xf1,0x51,0x2f,
0x2d,0x8c,0xe4,0x2e,0x78,0x10,0x45,0x04,0x61,0xc2,0x14,0x2f,
0xc3,0x43,0x56,0xbf,0x76,0xc1,0xb6,0x09,0xc9,0xd7,0xe9,0x0c,
0xf9,0xdf,0x4d,0xda,0xe1,0xe2,0x58,0x4f,0x6d,0xfa,0xde,0xef,
0xbd,0xbe,0x1a,0x59,0x7f,0xca,0x16,0xa1,0x97,0x6a,0x60,0x4c,
0xf5,0x46,0x5b,0x82,0x92,0x2d,0x8a,0x56,0xd1,0x6e,0xdc,0xf2,
0x5a,0xf7,0xa2,0x1f,0xed,0x8f,0xc0,0x56,0x17,0x0c,0x8e,0x97,
0xf7,0x57,0x8f,0xd2,0xdd,0xd6,0xa4,0xf4,0xe0,0x42,0xb8,0x2c,
0x17,0x3b,0x22,0x53,0xc4,0x77,0x16,0x9b,0x0e,0x6b,0x4a,0xb7,
0xde,0xc3,0x4a,0xf6,0x08,0x21,0x08,0x69,0x8c,0xa8,0xf5,0x40,
0x56,0x77,0x1d,0x5a,0x97,0xc3,0xc5,0x19,0x3c,0x73,0x45,0x47,
0x53,0xb0,0x8a,0xb1,0x66,0x1c,0xea,0xa9,0x75,0x59,0x81,0x67,
0x8b,0xd8,0x28,0x73,0xa4,0x64,0xbe,0xc6,0x56,0x39,0x42,0x3b,
0x9f,0x97,0x89,0x72,0xf7,0x97,0x17,0x59,0xfc,0x84,0x2d,0x96,
0x70,0x2c,0xc9,0x5f,0x0f,0x06,0x9f,0x9b,0x32,0x6b,0xc6,0xcf,
0x8d,0x3e,0x54,0x4b,0xd8,0xbc,0x3b,0xb2,0x6a,0x68,0x63,0x76,
0x0a,0x4f,0x02,0xfc,0xa6,0x27,0x3c,0x4c,0x05,0x16,0x53,0xe9,
0x37,0xd9,0x8d,0x33,0x7e,0x12,0x89,0x33,0x51,0x58,0xc6,0x0f,
0x30,0x9b,0x99,0xf3,0x1f,0xf7,0xa0,0xb0,0xfb,0xc8,0x48,0xd1,
0x92,0x38,0xd7,0x70,0x09,0x7b,0x12,0x87,0x2a,0x2d,0x21,0xb2,
0x25,0xd2,0x5e,0x7c,0xad,0x47,0x42,0x57,0x56,0xc7,0xc7,0x7b,
0x49,0x72,0x2b,0xdd,0x7c,0xb2,0x97,0x16,0x1c,0xdc,0x40,0xfc,
0x61,0x7c,0x85,0x5f,0x2f,0x68,0xf7,0x68,0xcb,0x6c,0xf2,0x22,
0x8a,0x1c,0x5f,0x8f,0x71,0x68,0x16,0xd8,0x6f,0x00,0x00,0x00,
0xff,0xff,0x6d,0xe6,0x35,0x4d,0x30,0x02,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}