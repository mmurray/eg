package templates

import (
	"bytes"
	"compress/gzip"
	"io"
)

// Controller returns the raw, uncompressed file data data.
func Controller() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x3c,0xcc,
0xb1,0x6e,0x83,0x30,0x10,0x80,0xe1,0x99,0x7b,0x8a,0x13,0x13,
0x74,0xc0,0x7b,0xbb,0xb6,0x03,0x0b,0x48,0x55,0x5f,0xc0,0x98,
0x2b,0x58,0xc1,0x3e,0xcb,0x3e,0x4b,0x49,0x2c,0xbf,0x7b,0x44,
0x06,0xf6,0xff,0xfb,0x83,0x36,0x37,0xbd,0x11,0x1a,0xf6,0x12,
0xf9,0x38,0x28,0x26,0x00,0xeb,0x02,0x47,0xc1,0x0e,0x9a,0x76,
0xb3,0xb2,0xe7,0x65,0x30,0xec,0x94,0xcb,0xf1,0xa9,0x68,0x63,
0xb5,0x8b,0x84,0x16,0x7a,0x00,0x79,0x04,0xc2,0x52,0x26,0xed,
0xa8,0x56,0x4c,0x12,0xb3,0x11,0x2c,0xd0,0x94,0xf2,0xe3,0x16,
0x5a,0x6b,0x85,0x0a,0xf0,0x9f,0xbd,0xc1,0xce,0x5c,0x5d,0x8f,
0xa3,0x5f,0xe9,0xde,0xf5,0xf8,0x71,0x8e,0x86,0x5f,0x4a,0x81,
0x7d,0xa2,0x13,0x2a,0x85,0x7f,0xf3,0xf7,0xfc,0x89,0xa3,0x0b,
0x07,0x39,0xf2,0x82,0xb2,0xdb,0x84,0xda,0x88,0x65,0x3f,0x40,
0x13,0x49,0x72,0xf4,0xf8,0x86,0x13,0xcb,0x95,0xd1,0xfa,0x05,
0xf5,0x15,0x00,0x00,0xff,0xff,0x1d,0xe1,0xa5,0xce,0xcc,0x00,
0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}